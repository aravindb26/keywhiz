/*
 * This file is generated by jOOQ.
 */
package keywhiz.jooq.tables;


import java.util.Arrays;
import java.util.List;

import keywhiz.jooq.Indexes;
import keywhiz.jooq.Keys;
import keywhiz.jooq.KeywhizdbTest;
import keywhiz.jooq.tables.records.DeletedAccessgrantsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeletedAccessgrants extends TableImpl<DeletedAccessgrantsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>keywhizdb_test.deleted_accessgrants</code>
     */
    public static final DeletedAccessgrants DELETED_ACCESSGRANTS = new DeletedAccessgrants();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DeletedAccessgrantsRecord> getRecordType() {
        return DeletedAccessgrantsRecord.class;
    }

    /**
     * The column <code>keywhizdb_test.deleted_accessgrants.id</code>.
     */
    public final TableField<DeletedAccessgrantsRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>keywhizdb_test.deleted_accessgrants.groupid</code>.
     */
    public final TableField<DeletedAccessgrantsRecord, Long> GROUPID = createField(DSL.name("groupid"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>keywhizdb_test.deleted_accessgrants.secretid</code>.
     */
    public final TableField<DeletedAccessgrantsRecord, Long> SECRETID = createField(DSL.name("secretid"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>keywhizdb_test.deleted_accessgrants.updatedat</code>.
     */
    public final TableField<DeletedAccessgrantsRecord, Long> UPDATEDAT = createField(DSL.name("updatedat"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>keywhizdb_test.deleted_accessgrants.createdat</code>.
     */
    public final TableField<DeletedAccessgrantsRecord, Long> CREATEDAT = createField(DSL.name("createdat"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>keywhizdb_test.deleted_accessgrants.row_hmac</code>.
     */
    public final TableField<DeletedAccessgrantsRecord, String> ROW_HMAC = createField(DSL.name("row_hmac"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    private DeletedAccessgrants(Name alias, Table<DeletedAccessgrantsRecord> aliased) {
        this(alias, aliased, null);
    }

    private DeletedAccessgrants(Name alias, Table<DeletedAccessgrantsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>keywhizdb_test.deleted_accessgrants</code> table
     * reference
     */
    public DeletedAccessgrants(String alias) {
        this(DSL.name(alias), DELETED_ACCESSGRANTS);
    }

    /**
     * Create an aliased <code>keywhizdb_test.deleted_accessgrants</code> table
     * reference
     */
    public DeletedAccessgrants(Name alias) {
        this(alias, DELETED_ACCESSGRANTS);
    }

    /**
     * Create a <code>keywhizdb_test.deleted_accessgrants</code> table reference
     */
    public DeletedAccessgrants() {
        this(DSL.name("deleted_accessgrants"), null);
    }

    public <O extends Record> DeletedAccessgrants(Table<O> child, ForeignKey<O, DeletedAccessgrantsRecord> key) {
        super(child, key, DELETED_ACCESSGRANTS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : KeywhizdbTest.KEYWHIZDB_TEST;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.DELETED_ACCESSGRANTS_DAG_GROUPID_SECRETID_IDX, Indexes.DELETED_ACCESSGRANTS_DAG_SECRETID_IDX);
    }

    @Override
    public Identity<DeletedAccessgrantsRecord, Long> getIdentity() {
        return (Identity<DeletedAccessgrantsRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<DeletedAccessgrantsRecord> getPrimaryKey() {
        return Keys.KEY_DELETED_ACCESSGRANTS_PRIMARY;
    }

    @Override
    public DeletedAccessgrants as(String alias) {
        return new DeletedAccessgrants(DSL.name(alias), this);
    }

    @Override
    public DeletedAccessgrants as(Name alias) {
        return new DeletedAccessgrants(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DeletedAccessgrants rename(String name) {
        return new DeletedAccessgrants(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DeletedAccessgrants rename(Name name) {
        return new DeletedAccessgrants(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, Long, Long, Long, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
